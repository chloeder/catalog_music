// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -destination=service_mock_test.go -package=memberships
//

// Package memberships is a generated GoMock package.
package memberships

import (
	memberships "catalog-music/internal/models/memberships"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockmembershipRepository is a mock of membershipRepository interface.
type MockmembershipRepository struct {
	ctrl     *gomock.Controller
	recorder *MockmembershipRepositoryMockRecorder
	isgomock struct{}
}

// MockmembershipRepositoryMockRecorder is the mock recorder for MockmembershipRepository.
type MockmembershipRepositoryMockRecorder struct {
	mock *MockmembershipRepository
}

// NewMockmembershipRepository creates a new mock instance.
func NewMockmembershipRepository(ctrl *gomock.Controller) *MockmembershipRepository {
	mock := &MockmembershipRepository{ctrl: ctrl}
	mock.recorder = &MockmembershipRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmembershipRepository) EXPECT() *MockmembershipRepositoryMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockmembershipRepository) CreateUser(user *memberships.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockmembershipRepositoryMockRecorder) CreateUser(user any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockmembershipRepository)(nil).CreateUser), user)
}

// GetUser mocks base method.
func (m *MockmembershipRepository) GetUser(id uint, email, username string) (*memberships.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", id, email, username)
	ret0, _ := ret[0].(*memberships.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockmembershipRepositoryMockRecorder) GetUser(id, email, username any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockmembershipRepository)(nil).GetUser), id, email, username)
}
